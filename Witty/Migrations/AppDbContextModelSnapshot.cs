// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Witty.Persistence;

namespace Witty.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Witty.Models.Response", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ResponseCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WittyEntryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WittyEntryId");

                    b.ToTable("Response");
                });

            modelBuilder.Entity("Witty.Models.WittyEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WittyEntries");
                });

            modelBuilder.Entity("Witty.Models.Response", b =>
                {
                    b.HasOne("Witty.Models.WittyEntry", null)
                        .WithMany("Responses")
                        .HasForeignKey("WittyEntryId");
                });
#pragma warning restore 612, 618
        }
    }
}
